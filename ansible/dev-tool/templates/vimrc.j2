set nocompatible              " be iMproved, required
filetype off                  " required

" 구문 강조 사용 
if has("syntax") 
	syntax on 
endif

let mapleader = ','

set hlsearch " 검색어 하이라이팅 
set nu " 줄번호 
" set autoindent " 자동 들여쓰기 
set scrolloff=2 
set wildmode=longest,list 
set ts=2 "tag select 
set sts=2 "st select 
set sw=1 " 스크롤바 너비 
set autowrite " 다른 파일로 넘어갈 때 자동 저장 
set autoread " 작업 중인 파일 외부에서 변경됬을 경우 자동으로 불러옴 
" set cindent " C언어 자동 들여쓰기 
set bs=eol,start,indent 
set history=256 
set laststatus=2 " 상태바 표시 항상 
set paste " 붙여넣기 계단현상 없애기 
" set shiftwidth=2 " 자동 들여쓰기 너비 설정 
set showmatch " 일치하는 괄호 하이라이팅 
set smartcase " 검색시 대소문자 구별 
" set smarttab 
" set smartindent 
" set softtabstop=2
" set tabstop=2
set ruler " 현재 커서 위치 표시 
set incsearch 
set statusline=\ %<%l:%v\ [%P]%=%a\ %h%m%r\ %F\

colorscheme jellybeans

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'preservim/nerdtree'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'preservim/nerdcommenter'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

" Start NERDTree and put the cursor back in the other window.
autocmd VimEnter * NERDTree | wincmd p

" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" NERD Commenter
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1
" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1
" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'
" Set a language to use its alternate delimiters by default
let g:NERDAltDelims_java = 1
" Add your own custom formats or override the defaults
let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }
" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1
" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1
" customize keymapping
nnoremap <leader>cc <plug>NERDComToggleComment
nnoremap <leader>c<space> <plug>NERDComComment


